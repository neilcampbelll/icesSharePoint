% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jwt_auth.R
\name{set_jwt_auth}
\alias{set_jwt_auth}
\alias{get_jwt_auth}
\alias{clear_jwt_auth}
\alias{is_valid_jwt}
\title{JWT Authentication Management}
\usage{
  set_jwt_auth(jwt_token = NULL, jwt_file = NULL)
  
  get_jwt_auth()
  
  clear_jwt_auth()
  
  is_valid_jwt(token = NULL)
}
\arguments{
  \item{jwt_token}{A character string containing the JWT token.}
  
  \item{jwt_file}{Path to a file containing the JWT token.}
  
  \item{token}{The JWT token to validate. If NULL, uses the token set via set_jwt_auth().}
}
\value{
  For set_jwt_auth, the function invisibly returns TRUE if successful.
  
  For get_jwt_auth, returns the JWT token if set, or NULL if not set.
  
  For clear_jwt_auth, invisibly returns TRUE.
  
  For is_valid_jwt, returns a logical value: TRUE if the token appears valid, FALSE otherwise.
}
\description{
  Functions to manage JWT authentication for ICES SharePoint and related services.
}
\examples{
  \dontrun{
    set_jwt_auth("jwt_token_string")
    # or
    set_jwt_auth(jwt_file = "jwt.txt")
    
    # Check if JWT token is set
    get_jwt_auth()
    
    # Check if token is valid
    is_valid <- is_valid_jwt()
    
    # Clear the token when done
    clear_jwt_auth()
  }
}